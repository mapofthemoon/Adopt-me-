{"ast":null,"code":"import { COMMON_BASE_URL } from \"./source\";\nimport { Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VolunteersService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = COMMON_BASE_URL + 'volunteers/';\n    this.volunteers = [{\n      id: 1,\n      name: 'Ali',\n      surname: 'Amangaliyev',\n      age: 20,\n      working_shelter: {\n        id: 1,\n        name: 'X',\n        city: 'Almaty',\n        country: 'Kazakhstan'\n      }\n    }, {\n      id: 2,\n      name: 'Zhonniks',\n      surname: 'Omarova',\n      age: 20,\n      working_shelter: {\n        id: 2,\n        name: 'Y',\n        city: 'Astana',\n        country: 'Kazakhstan'\n      }\n    }, {\n      id: 3,\n      name: 'Aisha',\n      surname: 'Aspanova',\n      age: 20,\n      working_shelter: {\n        id: 3,\n        name: 'Z',\n        city: 'Shymkent',\n        country: 'Kazakhstan'\n      }\n    }];\n  }\n  getAllVolunteers() {\n    // return this.http.get<volunteer[]>(this.BASE_URL);\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(this.volunteers);\n      }, 1000);\n    });\n  }\n  getVolunteerById(id) {\n    return this.http.get(`${this.BASE_URL}${id}`);\n  }\n  addVolunteer(volunteer) {\n    // return this.http.post<volunteer>(`${this.BASE_URL}`, volunteer);\n    this.volunteers.push(volunteer);\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(volunteer);\n      }, 1000);\n    });\n  }\n  updateVolunteer(id, volunteer) {\n    // return this.http.put<volunteer>(`${this.BASE_URL}${id}`, volunteer);\n    for (let i = 0; i < this.volunteers.length; i++) {\n      if (this.volunteers[i].id == id) {\n        this.volunteers[i] = volunteer;\n        break;\n      }\n    }\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(volunteer);\n      }, 1000);\n    });\n  }\n  deleteVolunteer(id) {\n    // return this.http.delete<volunteer>(`${this.BASE_URL}${id}`);\n    for (let i = 0; i < this.volunteers.length; i++) {\n      if (this.volunteers[i].id == id) {\n        this.volunteers.splice(i, 1);\n        break;\n      }\n    }\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(1);\n      }, 1000);\n    });\n  }\n}\nVolunteersService.ɵfac = function VolunteersService_Factory(t) {\n  return new (t || VolunteersService)(i0.ɵɵinject(i1.HttpClient));\n};\nVolunteersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VolunteersService,\n  factory: VolunteersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["COMMON_BASE_URL","Observable","VolunteersService","constructor","http","BASE_URL","volunteers","id","name","surname","age","working_shelter","city","country","getAllVolunteers","observer","setTimeout","next","getVolunteerById","get","addVolunteer","volunteer","push","updateVolunteer","i","length","deleteVolunteer","splice","factory","providedIn"],"sourceRoot":"","sources":["/Users/temich/Desktop/aisha/webdev/Adopt-me-/front/Adopt-Me/src/app/services/volunteers.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {COMMON_BASE_URL} from \"./source\";\nimport { Observable} from \"rxjs\";\nimport {volunteer} from \"../models/volunteer\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolunteersService {\n\n  private BASE_URL: string;\n\n  //temp\n  private volunteers: volunteer[];\n\n  constructor(private http: HttpClient) {\n    this.BASE_URL = COMMON_BASE_URL + 'volunteers/';\n    this.volunteers = [\n      {id: 1, name: 'Ali', surname: 'Amangaliyev', age: 20, working_shelter: {id: 1, name: 'X', city: 'Almaty', country: 'Kazakhstan'}},\n      {id: 2, name: 'Zhonniks', surname: 'Omarova', age: 20, working_shelter: {id: 2, name: 'Y', city: 'Astana', country: 'Kazakhstan'}},\n      {id: 3, name: 'Aisha', surname: 'Aspanova', age: 20, working_shelter:  {id: 3, name: 'Z', city: 'Shymkent', country: 'Kazakhstan'}},\n    ];\n  }\n\n  public getAllVolunteers(): Observable<volunteer[]> {\n    // return this.http.get<volunteer[]>(this.BASE_URL);\n\n    return new Observable<volunteer[]>(observer => {\n      setTimeout(() => {\n        observer.next(this.volunteers);\n      }, 1000);\n    });\n  }\n\n  public getVolunteerById(id: number): Observable<volunteer>{\n    return this.http.get<volunteer>(`${this.BASE_URL}${id}`);\n  }\n\n  public addVolunteer(volunteer: volunteer): Observable<volunteer>{\n    // return this.http.post<volunteer>(`${this.BASE_URL}`, volunteer);\n\n    this.volunteers.push(volunteer);\n\n    return new Observable<volunteer>(observer => {\n      setTimeout(() => {\n        observer.next(volunteer);\n      }, 1000);\n    });\n  }\n\n  public updateVolunteer(id: number, volunteer: volunteer): Observable<volunteer>{\n    // return this.http.put<volunteer>(`${this.BASE_URL}${id}`, volunteer);\n\n    for(let i = 0; i < this.volunteers.length; i++){\n      if(this.volunteers[i].id == id){\n        this.volunteers[i] = volunteer;\n        break;\n      }\n    }\n\n    return new Observable<volunteer>(observer => {\n      setTimeout(() => {\n        observer.next(volunteer);\n      }, 1000);\n    });\n  }\n\n  public deleteVolunteer(id: number): Observable<any>{\n    // return this.http.delete<volunteer>(`${this.BASE_URL}${id}`);\n\n    for(let i = 0; i < this.volunteers.length; i++){\n      if(this.volunteers[i].id == id){\n        this.volunteers.splice(i, 1);\n        break;\n      }\n    }\n\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(1);\n      }, 1000);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}